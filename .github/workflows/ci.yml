name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3

      - name: Node.js のセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Node.jsモジュール のキャッシュ
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 依存関係のインストール
        run: npm install

      - name: テスト実行後カバレッジを生成
        run: npm run test -- --coverage

      - name: カバレッジレポートのアップロード
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      # カバレッジ結果を抽出
      - name: カバレッジパーセントの抽出
        if: ${{ success() }}
        id: coverage
        run: |
          coverage=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          echo "coverage=${coverage}" >> $GITHUB_OUTPUT

      # テスト成功時のSlack 通知
      - name: テスト成功時のSlack 通知
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: |
            ✅ テストが成功しました。
            カバレッジ: ${{ steps.coverage.outputs.coverage }}%
          SLACK_USERNAME: 'Vitest Bot'
          SLACK_ICON_EMOJI: ':rocket'
          SLACK_COLOR: 'good'

      # テスト失敗時のSlack 通知
      - name: テスト失敗時のSlack 通知
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: '❌ テストが失敗しました。'
          SLACK_COLOR: 'danger'
          SLACK_USERNAME: 'Vitest Bot'
          SLACK_ICON_EMOJI: ':rocket'
